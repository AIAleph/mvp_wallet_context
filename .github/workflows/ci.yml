name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  go:
    name: Go build, lint, test, coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - name: Build
        run: go build ./cmd/...
      - name: Run tests with coverage
        run: go test -race -covermode=atomic -coverprofile=coverage.out ./...
      - name: Enforce 100% coverage on measured code
        run: |
          python3 tools/check_go_coverage.py coverage.out
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

  api:
    name: API TypeScript build and tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: api/package.json
      - run: npm ci
      - run: npm run build
      - run: npm test

  tools:
    name: Python tooling lint and tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tools
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - run: ruff check .
      - run: black --check .
      - run: pytest --cov=. --cov-fail-under=90 -q
